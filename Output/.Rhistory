citation (metafor)
citation(metafor)
citation('metafor')
iterations=10
dry_mean_prod=matrix(nrow = iterations,ncol=time_step)
dry_total_prod=matrix(nrow = iterations,ncol=time_step)
for (j in 1:iterations) {
time_step=16
females=1000
ddmn=10000
ddsd=3000
dwmn=18000
dwsd=6000
tdmn=29
tdsd=5
twmn=25
twsd=7
discharge=(rnorm(n=time_step,mean = ddmn, sd=ddsd))/22000
temp=(rnorm(n=time_step,mean=tdmn,sd=tdsd))/27
habitat=round(10*((discharge+temp)/2))
s_tmp=round(temp*10)
s_dist=round(discharge*10)
spawn=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(habitat[i]>=12){
spawn[k,i]=sample(c(1,2,3,4),size = 1,replace = FALSE,prob = c(0.05,0.15,0.3,0.5))
} else if (habitat[i]>=9 & habitat[i]<12){
spawn[k,i]=sample(c(1,2,3,4),size = 1,replace = FALSE,prob = c(0.1,0.2,0.3,0.4))
} else if (habitat[i]>=7 & habitat[i]<9){
spawn[k,i]=sample(c(1,2,3,4),size = 1,replace = FALSE,prob = c(0.2,0.4,0.3,0.1))
} else if (habitat[i]<7){
spawn[k,i]=sample(c(1,2,3,4),size = 1,replace = FALSE,prob = c(0.2,0.5,0.2,0.1))
}}}
prod=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(spawn[k,i]==4){
prod[k,i]=400000
} else if (spawn[k,i]==3){
prod[k,i]=100000
} else if (spawn[k,i]==2){
prod[k,i]=0
} else if (spawn[k,i]==1){
prod[k,i]=0
}}}
t_survive=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(s_tmp[i]>=12){
t_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.5,0.3,0.1,0.1)))
} else if (s_tmp[i]>=9 & s_tmp[i]<12){
t_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.3,0.4,0.2,0.1)))
} else if (s_tmp[i]>=7 & s_tmp[i]<9){
t_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.1,0.2,0.3,0.4)))
} else if (s_tmp[i]<7){
t_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.0,0.0,0.2,0.8)))
}}}
d_survive=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(s_dist[i]>=12){
d_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.5,0.3,0.1,0.1)))
} else if (s_dist[i]>=9 & s_dist[i]<12){
d_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.3,0.4,0.2,0.1)))
} else if (s_dist[i]>=7 & s_dist[i]<9){
d_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.1,0.2,0.3,0.4)))
} else if (s_dist[i]<7){
d_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.0,0.0,0.2,0.8)))
}}}
f_survive=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(t_survive[k,i]<=d_survive[k,i]){
f_survive[k,i]=t_survive[k,i]
} else if (t_survive[k,i]>d_survive[k,i]){
f_survive[k,i]=d_survive[k,i]
}}}
mean_fem_prod=numeric(time_step)
for (i in 1:time_step) {
mean_fem_prod[i]=mean(f_survive[,i])
}
total_fem_prod=numeric(time_step)
for (i in 1:time_step) {
total_fem_prod[i]=sum(f_survive[,i])
}
dry_mean_prod[j,]=mean_fem_prod
dry_total_prod[j,]=total_fem_prod
}
iterations=10
wet_mean_prod=matrix(nrow = iterations,ncol=time_step)
wet_total_prod=matrix(nrow = iterations,ncol=time_step)
for (j in 1:iterations) {
time_step=16
females=1000
ddmn=10000
ddsd=3000
dwmn=18000
dwsd=6000
tdmn=29
tdsd=5
twmn=25
twsd=7
discharge=(rnorm(n=time_step,mean = dwmn, sd=dwsd))/22000
temp=(rnorm(n=time_step,mean=twmn,sd=twsd))/27
habitat=round(10*((discharge+temp)/2))
s_tmp=round(temp*10)
s_dist=round(discharge*10)
spawn=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(habitat[i]>=12){
spawn[k,i]=sample(c(1,2,3,4),size = 1,replace = FALSE,prob = c(0.05,0.15,0.3,0.5))
} else if (habitat[i]>=9 & habitat[i]<12){
spawn[k,i]=sample(c(1,2,3,4),size = 1,replace = FALSE,prob = c(0.1,0.2,0.3,0.4))
} else if (habitat[i]>=7 & habitat[i]<9){
spawn[k,i]=sample(c(1,2,3,4),size = 1,replace = FALSE,prob = c(0.2,0.4,0.3,0.1))
} else if (habitat[i]<7){
spawn[k,i]=sample(c(1,2,3,4),size = 1,replace = FALSE,prob = c(0.2,0.5,0.2,0.1))
}}}
prod=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(spawn[k,i]==4){
prod[k,i]=400000
} else if (spawn[k,i]==3){
prod[k,i]=100000
} else if (spawn[k,i]==2){
prod[k,i]=0
} else if (spawn[k,i]==1){
prod[k,i]=0
}}}
t_survive=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(s_tmp[i]>=12){
t_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.5,0.3,0.1,0.1)))
} else if (s_tmp[i]>=9 & s_tmp[i]<12){
t_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.3,0.4,0.2,0.1)))
} else if (s_tmp[i]>=7 & s_tmp[i]<9){
t_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.1,0.2,0.3,0.4)))
} else if (s_tmp[i]<7){
t_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.0,0.0,0.2,0.8)))
}}}
d_survive=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(s_dist[i]>=12){
d_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.5,0.3,0.1,0.1)))
} else if (s_dist[i]>=9 & s_dist[i]<12){
d_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.3,0.4,0.2,0.1)))
} else if (s_dist[i]>=7 & s_dist[i]<9){
d_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.1,0.2,0.3,0.4)))
} else if (s_dist[i]<7){
d_survive[k,i]=prod[k,i]*(sample(c(1.0,0.75,0.25,0.0),size = 1,replace = FALSE,prob = c(0.0,0.0,0.2,0.8)))
}}}
f_survive=matrix(nrow=females,ncol=time_step)
for (k in 1:females) {
for (i in 1:time_step) {
if(t_survive[k,i]<=d_survive[k,i]){
f_survive[k,i]=t_survive[k,i]
} else if (t_survive[k,i]>d_survive[k,i]){
f_survive[k,i]=d_survive[k,i]
}}}
mean_fem_prod=numeric(time_step)
for (i in 1:time_step) {
mean_fem_prod[i]=mean(f_survive[,i])
}
total_fem_prod=numeric(time_step)
for (i in 1:time_step) {
total_fem_prod[i]=sum(f_survive[,i])
}
wet_mean_prod[j,]=mean_fem_prod
wet_total_prod[j,]=total_fem_prod
}
View(d_survive)
View(f_survive)
View(prod)
View(spawn)
View(t_survive)
View(wet_mean_prod)
View(wet_total_prod)
View(t_survive)
View(wet_total_prod)
View(wet_mean_prod)
View(prod)
data$rep
quantile
?quantile
?T
?t
t$
#call file in R
#data = read.table("../Output/TEST1.csv", header=T, sep="") #this one was used as an example
data = read.table("../Output/repsums.csv", header=T, sep=",")
setwd("~/GitHub/noninvasive_modeling")
setwd("~/GitHub/noninvasive_modeling/Output")
#call file in R
#data = read.table("../Output/TEST1.csv", header=T, sep="") #this one was used as an example
data = read.table("../Output/repsums.csv", header=T, sep="")
#call file in R
#data = read.table("../Output/TEST1.csv", header=T, sep="") #this one was used as an example
data = read.table("../Output/repsums.csv", header=T, sep=",")
View(data)
